-switch语句
是个选择语句，用于描述选择逻辑

*语法结构:
swtich(整形，字符，枚举表达式)
{
     语句项;
      ...
     语句项;
}
语句项格式:
// case语句项   
case 整形常量表达式
   语句;(单个语句，或者代码块)
// default语句项   
default 整形常量表达式
   语句;(单个语句，或者代码块)

进入switch语句后会根据整形表达式判断进入哪一个语句项
满足第几个语句项后的整形表达式就会从开始执行第几个语句项下的语句(或者代码块)并且继续向按语句项顺序执行每个的语句项下的语句(或者代码块)直到最后一个语句项(除非遇到break关键字)

如果所有语句项的条件都不满足且有default语句项
默认执行default语句项下的语句(或者代码块)并且继续向按语句项顺序执行每个的语句项下的语句(或者代码块)直到最后一个语句项(除非遇到break关键字)
举例	
	int i = 0;
	switch (i)
	{
	case 0:
		printf("ok");
	case 1:
		printf("ok");	
	}
	// 输出 okok

*break关键字的配合
如果不想执行了一个语句项后继续执行下面的语句项
可以在该语句项中加上break关键字 
switch语句中遇到break后会会直接跳出switch语句不再执行switch语句中的任何语句(包括break语句所在的语句项之后的所有语句)
如
	int i = 0;
	switch (i)
	{
	case 0:
		printf("ok");
		break;
	case 1:
		printf("ok");	
	}
	// 输出 ok

*swtich后的表达式应为能无损失转换为整形表达式
即大小要小于等于4的表达式
如字符枚举表达式(1字节)，短整型表达式(2字节)
枚举表达式(小于等于4字节)

*case后的表达式应为整形常量表达式，即以下三个：
字面整形常量,#define定义的标识符整形常量,枚举整形常量
具体可看文件 5.常量.txt