不同类型的指针有着不同的区别
1.不同的指针类型解引用操作时访问的空间大小不同
什么类型的指针就能访问什么类型大小的空间
如 int* 解引用操作时能够访问 int类型大小(4byte)的空间
  char* 解引用操作时能够访问char类型大小(1byte)的空间
举例	int a = 0x10001; // a = 65537
	char* pc = &a;
	*pc = 0;
	printf("%d\n", a); // 输出 65536

2.指针+-整数的结果不同
不同类型的指针+-整形时+-对应类型大小的数值(单位是字节)
如 int* +/- 1 后结果会 +/-4
  char* +/- 1 后结果会 +/-1
举例	int a = 10;
	int* pi = &a;
	char* pc = &a;
	printf("%p\n", pi);	// 007CFA80
	printf("%p\n", pi+1);	// 007CFA84
	printf("%p\n", pc);	// 007CFA80
	printf("%p\n", pc+1);	// 007CFA81
// 以上地址为测试时结果

*注意：void*指针不能直接进行加减法
*注意：数组也有类型，它的指针的+-也符合第二项不同
如	int arr[5] = { 0 };
	int(*parr)[5] = &arr;
	printf("%p\n", parr);	// 00C2F774
	printf("%p\n", parr+1);	// 00C2F788
	return 0;
