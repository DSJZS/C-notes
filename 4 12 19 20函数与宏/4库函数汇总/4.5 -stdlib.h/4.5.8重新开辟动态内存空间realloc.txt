开辟一块动态内存空间，并将之前用 malloc 或 calloc 所开辟的动态内存空间的内容拷贝过来（ 能拷贝的下就拷贝，先拷贝前面的数据 ，若有多余部分，则多余部分不可知）
头文件: strlib.h   or   malloc.h

函数声明：
void *realloc(void *memblock, size_t size);

返回值：
该函数返回一个指针 ，指向重新分配大小的内存空间。如果请求失败或者size参数为0时，则返回 NULL。

调用格式:
realloc( memblock,   size);

说明：
memblock 	-- 	指针指向一个要重新分配内存的内存块，该内存块之前是通过调用 malloc、calloc 或 realloc 进行分配内存的。如果为空指针，则会分配一个新的内存块，			且realloc函数会返回一个指向它的指针。
size 		--	内存块的新的大小，以字节为单位。如果大小为 0，且 memblock 指向一个已存在的内存块，则 memblock 所指向的内存块会被释放，并返回一个空指针。

realloc函数返回的指针不一定等于原来内存空间的指针，
如果已分配的内存空间后面有空闲的空间，则realloc不会移动数据而只是增加原来内存空间的长度，并返回传给它的原内存空间的指针。
但当前内存空间后面没有足够的空闲空间时，realloc会重新分配一内存空间，并移动当前内存空间的内容到新空间，并释放原来的空间，然后返回新空间的指针。


举例：

注意：
1.返回的指针为无类型的指针，需要根据实际需求进行强制类型转换
2.不再使用开辟的内存空间时，必须使用 free 函数释放内存空间，避免内存泄漏
3.程序结束时会自动释放内存空间
4.如果参数 size 为0，会释放memblock指向的内存空间，并返回一个NULL
5.如果参数memblock为NULL，realloc函数会开辟一块新的内存空间并返回它的地址	(如 realloc(NULL,40) 等价于 malloc(40) )
6.realloc函数返回的指针不一定等于原来内存空间的指针，可能会开辟一个新的同时释放旧的

自己编写的版本：
一辈子写不出

该模板应用于 2023.8.21 20:25后编写的函数与宏的介绍( 这句话也是未完成标识，未完成的笔记不应删除这行字 )