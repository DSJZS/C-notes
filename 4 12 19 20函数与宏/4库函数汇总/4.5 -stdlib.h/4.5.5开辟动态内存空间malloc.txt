在堆区上开辟内存空间
头文件:  stdlib.h   or   malloc.h

函数声明：
void* malloc( size_t size);

返回值：
该函数返回一个指针 ，指向已分配大小的内存空间。如果请求失败，则返回 NULL。

调用格式:
(type)malloc( size_t size);

说明：
size 	-- 	内存块的大小，以字节为单位。

malloc函数会在堆区开辟size个字节大小的内存空间，并且返回该内存空间地址的指针
指针为无类型的指针，需要根据实际需求进行强制类型转换

举例：
	int* p = (int*)malloc(10*sizeof(int));
	int i = 0;
	if(p != NULL)
	{
		for(i=0;i<10;i++)
		{
			p[i] = i;
		}
		for(i=0;i<10;i++)
		{
			printf("%d ",p[i]); // 输出 0 1 2 3 4 5 6 7 8 9
		}
	}
	free(p);
	p = NULL;

注意：
1.返回的指针为无类型的指针，需要根据实际需求进行强制类型转换
2.不再使用开辟的内存空间时，必须使用 free 函数释放内存空间，避免内存泄漏
3.程序结束时会自动释放内存空间
4.如果参数 size 为0，malloc的行为是未定义的，取决于编译器
5.malloc类似calloc，但是malloc不会初始化内存空间的每个字节内容为0，效率比calloc高一些

建议：
1.想要初始化开辟的内存空间用 calloc 函数
2.想要效率或者不想初始化内存空间用 malloc 函数

自己编写的版本：
一辈子写不出
该模板应用于 2023.8.21 20:25后编写的函数与宏的介绍( 这句话也是未完成标识，未完成的笔记不应删除这行字 )