在堆区上开辟内存空间，并将开辟的内存空间的每个字节内容初始化为0
头文件: stdlib.h   or   malloc.h

函数声明：
void *calloc(size_t num, size_t size);

返回值：
该函数返回一个指针，指向已分配的内存空间。如果请求失败，则返回 NULL。

调用格式:
calloc(  num,   size);

说明：
num -- 要被分配的元素个数。
size -- 元素的大小。

举例：
	int* p = (int*)calloc(10,sizeof(int));
	int i = 0;
	if(p != NULL)
	{
		for(i=0;i<10;i++)
		{
			printf("%d ",p[i]); // 输出 0 0 0 0 0 0 0 0 0 0 
		}
	}
	free(p);
	p = NULL;

注意：
1.calloc类似malloc，但是calloc会初始化内存空间的每个字节内容为0，效率比malloc低一些
2.返回的指针为无类型的指针，需要根据实际需求进行强制类型转换
3.不再使用开辟的内存空间时，必须使用 free 函数释放内存空间，避免内存泄漏
4.程序结束时会自动释放内存空间

建议：
1.想要初始化开辟的内存空间用 calloc 函数
2.想要效率或者不想初始化内存空间用 malloc 函数

自己编写的版本：
一辈子写不出来
该模板应用于 2023.8.21 20:25后编写的函数与宏的介绍( 这句话也是未完成标识，未完成的笔记不应删除这行字 )