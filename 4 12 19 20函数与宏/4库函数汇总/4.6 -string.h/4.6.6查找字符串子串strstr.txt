在一个字符串中查找第一次出现 另一个字符串(子串) 的位置(不包含终止符 '\0')。也能判断一个字符串是否为另一个字符串的子串
头文件: string.h

函数声明：
char *strstr(const char * str1, const char * str2);

返回值：
该函数返回在 str1 中第一次出现 str2 字符串的位置，如果未找到则返回 null。

调用格式:
strstr( str1, str2);

说明：
str1		-- 要被检索的 C 字符串。
str2	 	-- 在 str1 字符串内要搜索的小字符串。

举例：
	char str1[] = "ABCDE";
	char str2[] = "DE";
	char* ret = strstr(str1,str2);
	if(ret != NULL)
		printf("%s\n", ret); // 输出 DE

*注意：如果有多个子串，只会返回第一个子串的位置

自己编写的版本：
-第一版
char * my_strstr(const char *str1, const char *str2)
{
	int s1Sz = strlen(str1);
	int s2Sz = strlen(str2);
	if(*str2 == '\0')
		return (char*)str1;
	if(s1Sz<s2Sz)
		return NULL;
	while( (*str1) && (s1Sz>=s2Sz) )
	{
		if( !(strncmp((char*)str1,str2,s2Sz)) )
			return (char*)str1;
		++str1,--s1Sz;
	}
	return NULL;
}

-第二版
char * my_strstr(const char *str1, const char *str2)
{
	char* ret = (char*)str1;
	char *s1, *s2;
	if(!*str2)
		return (char*)str1;
	while(*ret)
	{
		s1 = ret;
		s2 = (char*)str2;
		while((*s1)&&(*s2)&&(*s1==*s2))
		{
			++s1,++s2;
		}
		if(!*s2)
			return ret;
		if(!*s1)
			return NULL;
		ret++;
	}
	return NULL;
}