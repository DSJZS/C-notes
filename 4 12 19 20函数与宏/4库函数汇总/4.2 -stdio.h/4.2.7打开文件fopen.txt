函数的头文件: stdio.h

函数的作用：按照给定的模式打开文件，并返回一个与之关联文件指针

函数声明：
FILE *fopen(const char *filename, const char *mode);

参数说明：
filename	--	 字符串，表示要打开的文件标识。
mode 		--	 字符串，表示文件的访问模式，可以是以下表格中的值：
模式	描述
“r” ：	以只读方式打开文件，该文件必须存在。

“w” ：	打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。
“a” ：	以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。（EOF符保留）

“r+”：	以可读写方式打开文件，该文件必须存在。
“w+”：	打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。
“a+”：	以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，即文件原先的内容会被保留。 （原来的EOF符不保留）

“rb”：	只读打开一个二进制文件，只允许读数据。
“wb”：	只写打开或建立一个二进制文件，只允许写数据。
“ab”：	追加打开一个二进制文件，并在文件末尾写数据。

“rb+”：	读写打开一个二进制文件，允许读写数据，文件必须存在。
“wb+”：	读写打开或建立一个二进制文件，允许读和写。
“ab+”：	读写打开一个二进制文件，允许读，或在文件末追加数据。

“rt”：	只读打开一个文本文件，只允许读数据。
“wt”：	只写打开或建立一个文本文件，只允许写数据。
“at”：	追加打开一个文本文件，并在文件末尾写数据。

“rt+”：	读写打开一个文本文件，允许读和写。
“wt+”：	读写打开或建立一个文本文件，允许读写。
“at+”：	读写打开一个文本文件，允许读，或在文件末追加数据。

返回值：
该函数返回一个 FILE 指针。否则返回 NULL，且设置全局变量 errno 来标识错误。

调用格式:
fopen(  filename,  mode);

举例：
	FILE* pf = fopen("..\\FILE_TEST\\test.txt","r");
	if(pf==NULL)
	{
		printf("%s\n",strerror(errno));
		return 0;
	}
	fclose(pf);
	pf = NULL;

注意事项：
1.注意检验fopen函数的返回值是否为NULL
2.有些打开模式会对文件进行修改，甚至删除；此外有的打开模式如果目标文件不存在会打开失败

建议：
1.仔细检查各打开模式的功能

自己编写的版本：
一辈子写不出
该模板应用于 2023.8.27 22:00后编写的函数与宏的介绍( 这句话也是未完成标识，未完成的笔记不应删除这行字 )