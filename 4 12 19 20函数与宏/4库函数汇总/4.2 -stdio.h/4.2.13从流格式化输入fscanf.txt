函数的头文件: stdio.h

函数的作用： 
从流 stream 读取格式化输入。并把位置标识符往前移动。
该函数只能操作文本文件，无法操作二进制文件

函数声明：
int fscanf(FILE *stream, const char *format, ...);

参数说明：
stream 		-- 	这是指向 FILE 对象的指针，该 FILE 对象标识了流。
format 		--	这是 C 字符串，包含了以下各项中的一个或多个：空格字符、非空格字符 和 format 说明符。
(format参数和...参数在scanf函数中也有，用法一致)

返回值：
如果成功，该函数返回成功匹配和赋值的个数。如果到达文件末尾或发生读错误，则返回 EOF。

调用格式:
fscanf( stream,  format, ...);

举例：
	int a,b,c;
	char str[256] = "test";
	FILE* pf = fopen("..\\FILE_TEST\\test.txt","r");
	if(pf==NULL)
	{
		printf("%s\n",strerror(errno));
		return 0;
	}
	else
	{
		if( EOF != fscanf(pf,"%d %d %d %s",&a,&b,&c,str))
		{
			printf("%d %d %d %s\n",a,b,c,str);
		}
		if( EOF != fscanf(pf,"%d %d %d %s",&a,&b,&c,str))
		{
			printf("%d %d %d %s\n",a,b,c,str);
		}
		if( EOF != fscanf(pf,"%d %d %d %s",&a,&b,&c,str))
		{
			printf("%d %d %d %s\n",a,b,c,str);
		}
	}
	fclose(pf);

注意事项：
1.如果到达文件末尾或发生读错误，则返回 EOF。
2.该函数会移动位置标识符
3.和scanf函数一样，记得使用&操作符
4.该函数只能操作文本文件，无法操作二进制文件

建议：
1.检测返回值

自己编写的版本：
一辈子写不出
该模板应用于 2023.8.27 22:00后编写的函数与宏的介绍( 这句话也是未完成标识，未完成的笔记不应删除这行字 )