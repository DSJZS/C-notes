关键字的作用文声明外部符号(变量，函数等)

用法举例
*不同文件的变量与函数声明
举例：
如果一个项目有两个原文件，
一个叫 test1.c ,另一个叫 test2.c
test2.c中有一个全局变量定义 int g_val = 100;
全局变量的作用域是整个工程，因此test1.c中也
可使用全局变量 g_val
如果我们要在 test1.c 中使用全局变量 g_val
需要先用关键字extern 声明有全局变量 g_val
如 extern int g_val;
   printf("%d", g_val); // 结果为100

*相同文件的变量与函数声明
(相同文件的声明其实可以忽略 extern
个人实验中至少在代码块外是可以的，
但是还是加上吧，避免出现bug)
举例：
假设有段代码
int main()
{
	printf("%d", a);
	return 0;
}
int a = 85;
// 全局变量a定义在main函数之后，虽然变量a身为全局变量，
作用域是整个工程，但是编译器在编译时是由上到下的，编译
main函数时不知道main函数中的 a 是什么，
为了解决这个问题，我们需要利用关键字extern
如下
int main()
{
        extern int a;
	printf("%d", a); // 输出 85
	return 0;
}
int a = 85;
// 关键字extern 声明了全部变量a ，
告知了编译器 全局变量a 的存在

补充：上面举得都是变量的例子，声明函数例子如下
extern int test( int, char);
// 需要写明函数的 返回类型 函数名 
   参数列表中变量的类型及其顺序(写全变量名也行)
*注意：实际上函数声明加不加 extern 无所谓，因为函数声明默认为 extern




